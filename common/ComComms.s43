;
; Miscellaneous common functions
;

;
; Transmit the present checksum if checksumming is on. Clear checksum.
;
; This is not in InterruptComms.s43 because it is used by both the Monitor and TestICal
; But the TestICal does not use serialio. It has its own version of TxByteCk.
; Trashes R8, R9
TxCksum:
			bit.b		#bChecksumming,&interpFlags
			_IF		NZ
				mov		&txCksum,R8			; Get the calculated CRC12
				inv		R8					; Invert it
				call	#MakeCrc12Printable	; Convert it to two printable ASCII bytes in R8. Trashes R9
				call 	#TxByte				; Send the LSB of the CRC12. Preserves R8. Trashes R9.
				swpb	R8
				call 	#TxByte				; Send the MSB of the CRC12
				_ENDIF
			mov		#InitialCrc12,&txCksum	; Initialise the CRC12
			ret


TxEndOfPacket:
			call	#TxCksum				; Transmit checksum if required, then initialise checksum.
			mov		#'\r',R8				; Transmit a carriage return.
			br		#TxByte					; Tail-call TxByte and return
;			ret

;-------------------------------------------------------------------------------
; TxString	; Transmit counted string pointed to by R10 while not accumulating checksum.
			; Warning: A zero length string will be treated as 256 bytes long.
			; If necessary, wait until the queue is not full.
			; Trashes R8 thru R11.
;-------------------------------------------------------------------------------

TxString: _FOR_B	@R10+,R11
TxBytes:								; Alternative entry point with length in R11
				mov.b	@R10+,R8
				push	R10
				push	R11
				call	#TxByte
				pop		R11
				pop		R10
			_NEXT_DEC_B	R11
			ret

;-------------------------------------------------------------------------------
; TxStringCk ; Transmit counted string pointed to by R10 while accumulating checksum.
			; Warning: A zero length string will be treated as 256 bytes long.
			; If necessary, wait until the queue is not full.
			; Trashes R8 thru R11.
;-------------------------------------------------------------------------------

TxStringCk: _FOR_B	@R10+,R11
				mov.b	@R10+,R8
				push	R10
				push	R11
				call	#TxByteCk
				pop		R11
				pop		R10
			_NEXT_DEC_B	R11
			ret

#if defined(MONITOR) || defined(MONOLITH)	// Don't define in TestICal since it won't have
											//	some required definitions (e.g. ChgTxByte)
ChgTxString: _FOR_B	@R10+,R11
ChgTxBytes:								; Alternative entry point with length in R11
				mov.b	@R10+,R8
				push	R10
				push	R11
				call	#ChgTxByte
				pop		R11
				pop		R10
			_NEXT_DEC_B	R11
			ret

ScuTxString: _FOR_B	@R10+,R11
ScuTxBytes:								; Alternative entry point with length in R11
				mov.b	@R10+,R8
				push	R10
				push	R11
				call	#ScuTxByte
				pop		R11
				pop		R10
			_NEXT_DEC_B	R11
			ret

#endif
