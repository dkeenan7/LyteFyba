;
; Comms routines, since TestICal doesn't use InterruptComms.s43. Needed by common code.
;

DELAY_IF_NEEDED MACRO		; Delay for one character time to allow the downstream CMU to echo a byte
			clr		R9					; Use R9 to count cycles
			_BEGIN						; Loop
				cmp.b	#255,&infoID
				_IF		_EQ					; If we're a BMU
					bit.b	#UCA0RXIFG,&IFG2
					_IF		_NZ					; If there's a byte from the CMU port
						bit		#WRT,&FCTL1
						_IF		_Z					; And if we're not writing to flash
							push	R8					; Preserve R8
							mov.b	&UCA0RXBUF,R8		; Get CMU byte
							call 	#WriteScuByte-jBSL+BSL2_START ; Send the byte to the SCU port
							pop		R8					; Restore R8
							add		#(MClock*104/100000), R9 ; Add a whole character time, so we're done
						_ENDIF
						add		#9, R9			; Add 9 cycles
					_ENDIF
					add		#9, R9			; Add 9 cycles
				_ENDIF
				add		#16, R9			; Add 16 cycles (includes cmp and UNTIL below)
				cmp		#(MClock*104/100000), R9
			_UNTIL	_HS					; Until at least 1.04 ms has passed
			ENDM
			LSTOUT+


WaitTxComplete:	ret						; Empty routine: transmit is always complete
TxByteCk:	xor.b	R8,&txCksum			; Alternative entry which accumulates checksum
TxByte:		call	#jWriteByte			; Call the BSL's non-interrupt bit-bashing transmit routine
			ClearWatchdog
			DELAY_IF_NEEDED
			ret

