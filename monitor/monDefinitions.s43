;
; Bytecode definitions for the monitor
;

#include "../common/comDefinitions.s43"			; Include the definitions common to monitor
												; and debugger
;
; Kill badness sending (toggle) ( -- )
;
			xCODE	'}',BadnessAutonomy_,_BadnessAutonomy
BadnessAutonomy	EQU		'K'					; Interpreter treats K as synonym for right-curly-brace
			inv.b	&bSendBad				; Toggle badness sending
			ret
		
; checKsumming toggle ( -- )
			xCODE	'k',checksumming,_checksumming
			inv.b	&Checksumming			; Toggle checksumming
			ret
		
; Rx state ( -- )
			xCODE	'r',RxState,_RxState ; Note: 'r' is read calibration value in debugger
			mov		#'t',Rthd				; Units are "ticks"
			mov.b	&ticksSinceLastRx,Rsec	; Result
			mov		#3,Rtos					; Print 3 digits
			jmp		_prettyPrint			; Tail-call pretty-print and return

; Badness ( -- )
			xCODE	'b',Badness,_Badness
			mov		#'{',Rthd				; Units are frowny mouths :-{
			mov.b	&localBadness,Rsec		; Result
			mov		#3,Rtos					; Print 3 digits
			jmp		_prettyPrint			; Tail-call pretty-print and return

; Query worst badness ( -- )
			xCODE	'q',queryWorstBadness,_queryWorstBadness
			mov		#'{',Rthd				; Units are frowny mouths :-{
			mov.b	&worstBadness,Rsec		; Result
			mov		#3,Rtos					; Print 3 digits
	; !!! Incomplete. Need to also prettyPrint the reason for the worst badness
			jmp		_prettyPrint			; Tail-call pretty-print and return
		
; Reset worst badness ( -- )
			xCODE	'{',resetWorstBadness,_resetWorstBadness ; Frowny mouth :-{ because irreversible
			clr.b	&worstBadness
	; !!! Incomplete. Need to also reset the reason for the worst badness
			ret